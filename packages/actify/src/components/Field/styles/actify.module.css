@value filled,outlined from './field.module.css';

.field {
  width: 100%;
  cursor: text;
  display: flex;
  resize: inherit;
  flex: 1;
  flex-direction: column;
  writing-mode: horizontal-tb;
  max-width: 100%;
}

.container-overflow {
  resize: inherit;
  border-start-start-radius: var(--_container-shape-start-start);
  border-start-end-radius: var(--_container-shape-start-end);
  border-end-end-radius: var(--_container-shape-end-end);
  border-end-start-radius: var(--_container-shape-end-start);
  display: flex;
  height: 100%;
  position: relative;
}

.container {
  align-items: center;
  border-radius: inherit;
  display: flex;
  flex: 1;
  max-height: 100%;
  min-height: 100%;
  min-width: min-content;
  position: relative;
}

.start {
  align-items: center;
  justify-content: center;
  display: flex;
  box-sizing: border-box;
  height: 100%;
  position: relative;
}

.middle {
  display: flex;
  box-sizing: border-box;
  height: 100%;
  position: relative;
  align-items: stretch;
  align-self: baseline;
  flex: 1;
}

.end {
  align-items: center;
  justify-content: center;
  display: flex;
  box-sizing: border-box;
  height: 100%;
  position: relative;
  color: var(--_trailing-content-color);
}

.content {
  color: var(--_content-color);
  display: flex;
  flex: 1 1 0%;
  opacity: 0;
  transition: opacity 83ms cubic-bezier(0.2, 0, 0, 1) 0s;
}
.focused .content,
.populated .content {
  opacity: 1;
  transition-delay: 67ms;
}

.input {
  caret-color: var(--_caret-color);
  overflow-x: hidden;
  text-align: inherit;
}

.label {
  box-sizing: border-box;
  color: var(--_label-text-color);
  overflow: hidden;
  max-width: 100%;
  text-overflow: ellipsis;
  white-space: nowrap;
  z-index: 1;
  font-family: var(--_label-text-font);
  font-size: var(--_label-text-size);
  line-height: var(--_label-text-line-height);
  font-weight: var(--_label-text-weight);
  width: min-content;
  &.resting {
    position: absolute;
    top: var(--_top-space);
  }
  &.floating {
    font-size: var(--_label-text-populated-size);
    line-height: var(--_label-text-populated-line-height);
    transform-origin: top left;
  }
  &.visible {
    opacity: 0;
  }
}
.error .label {
  color: var(--_error-label-text-color);
}

.input-wrapper {
  all: unset;
  color: currentColor;
  font-family: var(--_content-font);
  font-size: var(--_content-size);
  line-height: var(--_content-line-height);
  font-weight: var(--_content-weight);
  width: 100%;
  overflow-wrap: revert;
  white-space: revert;
  display: flex;
  padding-top: var(--_top-space);
  padding-bottom: var(--_bottom-space);
  & > * {
    all: inherit;
    padding: 0;
  }
}
.field:not(.no-label) .filled .input-wrapper {
  padding-bottom: var(--_with-label-bottom-space);
  padding-top: calc(
    var(--_with-label-top-space) + var(--_label-text-populated-line-height)
  );
}
.field:not(.with-start) .filled .input-wrapper {
  padding-inline-start: var(--_leading-space);
}
.field:not(.with-end) .filled .input-wrapper {
  padding-inline-end: var(--_trailing-space);
}

.field:not(.no-label) .outlined .input-wrapper {
  padding-top: var(--_top-space);
  padding-bottom: var(--_bottom-space);
}

.field:not(.with-start) .outlined .input-wrapper {
  padding-inline-start: max(
    var(--_leading-space),
    max(var(--_container-shape-start-start), var(--_container-shape-end-start)) +
      var(--_outline-label-padding)
  );
}
.field:not(.with-end) .outlined .input-wrapper {
  padding-inline-end: max(
    var(--_trailing-space),
    max(var(--_container-shape-start-end), var(--_container-shape-end-end))
  );
}

.background {
  background-color: var(--_container-color);
  border-radius: inherit;
  inset: 0;
  position: absolute;
}

.state-layer {
  border-radius: inherit;
  inset: 0;
  pointer-events: none;
  position: absolute;
  visibility: hidden;
}
:hover .state-layer {
  background: var(--_hover-state-layer-color);
  opacity: var(--_hover-state-layer-opacity);
}
.field:not(.disabled):hover .state-layer {
  visibility: visible;
}

.active-indicator {
  inset: auto 0 0 0;
  pointer-events: none;
  position: absolute;
  width: 100%;
  z-index: 1;
  &:before {
    border-bottom: var(--_active-indicator-height) solid
      var(--_active-indicator-color);
    inset: auto 0 0 0;
    content: '';
    position: absolute;
    width: 100%;
    border-bottom-color: var(--_hover-active-indicator-color);
    border-bottom-width: var(--_hover-active-indicator-height);
  }
  &:after {
    border-bottom: var(--_active-indicator-height) solid
      var(--_active-indicator-color);
    inset: auto 0 0 0;
    content: '';
    position: absolute;
    width: 100%;
    opacity: 0;
    transition: opacity 150ms cubic-bezier(0.2, 0, 0, 1);
    border-bottom-color: var(--_focus-active-indicator-color);
    border-bottom-width: var(--_focus-active-indicator-height);
  }
}
.focused .active-indicator:after {
  opacity: 1;
}

.label-wrapper {
  inset: 0;
  pointer-events: none;
  position: absolute;
  text-align: initial;
}

.field:not(.with-start) .filled .label-wrapper {
  margin-inline-start: var(--_leading-space);
}
.field:not(.with-end) .filled .label-wrapper {
  margin-inline-end: var(--_trailing-space);
}

.field:not(.with-start) .outlined .label-wrapper {
  margin-inline-start: max(
    var(--_leading-space),
    max(var(--_container-shape-start-start), var(--_container-shape-end-start)) +
      var(--_outline-label-padding)
  );
}
.field:not(.with-end) .outlined .label-wrapper {
  margin-inline-end: max(
    var(--_trailing-space),
    max(var(--_container-shape-start-end), var(--_container-shape-end-end))
  );
}

.outline {
  border-color: var(--_outline-color);
  border-radius: inherit;
  display: flex;
  pointer-events: none;
  height: 100%;
  position: absolute;
  width: 100%;
  z-index: 1;
}
:hover .outline {
  border-color: var(--_hover-outline-color);
  color: var(--_hover-outline-color);
}
.focused .outline {
  color: var(--_focus-outline-color);
  border-color: var(--_focus-outline-color);
}
.error .outline {
  border-color: var(--_error-outline-color);
  color: var(--_error-outline-color);
}

.outline-start {
  border: inherit;
  border-radius: inherit;
  box-sizing: border-box;
  position: relative;
  padding-inline-start: max(
    var(--_leading-space),
    max(var(--_container-shape-start-start), var(--_container-shape-end-start)) +
      var(--_outline-label-padding)
  );
  &:before,
  &:after {
    border: inherit;
    content: '';
    inset: 0;
    position: absolute;
  }
  &:before {
    border-width: var(--_outline-width);
    border-inline-start-style: solid;
    border-inline-end-style: none;
    border-start-start-radius: inherit;
    border-start-end-radius: 0;
    border-end-start-radius: inherit;
    border-end-end-radius: 0;
    margin-inline-end: var(--_outline-label-padding);
    border-bottom-style: solid;
    border-top-style: solid;
  }
  &:after {
    border-width: var(--_focus-outline-width);
    border-inline-start-style: solid;
    border-inline-end-style: none;
    border-start-start-radius: inherit;
    border-start-end-radius: 0;
    border-end-start-radius: inherit;
    border-end-end-radius: 0;
    margin-inline-end: var(--_outline-label-padding);
    opacity: 0;
    transition: opacity 150ms cubic-bezier(0.2, 0, 0, 1);
    border-bottom-style: solid;
    border-top-style: solid;
  }
}

.outline-notch {
  align-items: flex-start;
  border: inherit;
  display: flex;
  margin-inline-start: calc(-1 * var(--_outline-label-padding));
  margin-inline-end: var(--_outline-label-padding);
  max-width: calc(100% - var(--_leading-space) - var(--_trailing-space));
  padding: 0 var(--_outline-label-padding);
  position: relative;
}
.no-label .outline-notch {
  display: none;
}

.outline-end {
  border: inherit;
  border-radius: inherit;
  box-sizing: border-box;
  position: relative;
  flex-grow: 1;
  margin-inline-start: calc(-1 * var(--_outline-label-padding));
  &:before,
  &:after {
    border: inherit;
    content: '';
    inset: 0;
    position: absolute;
  }
  &:before {
    border-width: var(--_outline-width);
    border-inline-start-style: none;
    border-inline-end-style: solid;
    border-start-start-radius: 0;
    border-start-end-radius: inherit;
    border-end-start-radius: 0;
    border-end-end-radius: inherit;
    border-bottom-style: solid;
    border-top-style: solid;
  }
  &:after {
    border-width: var(--_focus-outline-width);
    border-inline-start-style: none;
    border-inline-end-style: solid;
    border-start-start-radius: 0;
    border-start-end-radius: inherit;
    border-end-start-radius: 0;
    border-end-end-radius: inherit;
    opacity: 0;
    transition: opacity 150ms cubic-bezier(0.2, 0, 0, 1);
    border-bottom-style: solid;
    border-top-style: solid;
  }
}

.outline-panel-inactive {
  border-width: var(--_outline-width);
  content: '';
  inset: 0;
  position: absolute;
  border-left-style: none;
  border-right-style: none;
  border-top-style: none;
  border-color: inherit;
  border-bottom-style: solid;
  &:before,
  &:after {
    border: inherit;
    content: '';
    inset: 0;
    position: absolute;
    border-width: var(--_outline-width);
    border-top-style: solid;
    border-bottom: none;
    bottom: auto;
    transform: scaleX(1);
    transition: transform 150ms cubic-bezier(0.2, 0, 0, 1);
  }
  &:before {
    right: 50%;
    transform-origin: top left;
  }
  &:after {
    left: 50%;
    transform-origin: top right;
  }
}

.outline-panel-active {
  border: inherit;
  content: '';
  inset: 0;
  position: absolute;
  border-width: var(--_focus-outline-width);
  opacity: 0;
  border-top-style: none;
  border-left-style: none;
  border-right-style: none;
  border-bottom-style: solid;
  transition: opacity 150ms cubic-bezier(0.2, 0, 0, 1);
  &:before,
  &:after {
    border: inherit;
    content: '';
    inset: 0;
    position: absolute;
    border-width: var(--_focus-outline-width);
    border-top-style: solid;
    border-bottom: none;
    bottom: auto;
    transform: scaleX(1);
    transition: transform 150ms cubic-bezier(0.2, 0, 0, 1);
  }
  &:before {
    right: 50%;
    transform-origin: top left;
  }
  &:before {
    left: 50%;
    transform-origin: top right;
  }
}

.focused .outline-start:after,
.focused .outline-end:after,
.focused .outline-panel-active {
  opacity: 1;
}
.populated .outline-panel-inactive:before,
.populated .outline-panel-inactive:after,
.populated .outline-panel-active:before,
.populated .outline-panel-active:after,
.focused .outline-panel-inactive:before,
.focused .outline-panel-inactive:after,
.focused .outline-panel-active:before,
.focused .outline-panel-active:after {
  transform: scaleX(0);
}

.outline-label {
  display: flex;
  max-width: 100%;
  transform: translateY(calc(-100% + var(--_label-text-padding-bottom)));
}
